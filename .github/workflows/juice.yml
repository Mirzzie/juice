name: Juice Shop DevSecOps Pipeline with Datadog IAST

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  EC2_HOST: ${{ secrets.SSH_HOST }} # EC2 instance public IP/DNS
  EC2_USER: ${{ secrets.SSH_USER }} # SSH user for EC2
  SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }} # SSH private key
  JUICE_SHOP_PORT: 3000

jobs:
  build_and_deploy:
    name: Build and Deploy Juice Shop on EC2 with IAST enabled
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t juice-shop:latest .

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Juice Shop container with Datadog IAST enabled
        run: |
          ssh -i ~/.ssh/id_rsa ${{ env.SSH_USER }}@${{ env.SSH_HOST }} << 'EOF'
            docker stop juice-shop || true
            docker rm juice-shop || true
            # Use official juice-shop image or your built image
            # Run container with Datadog IAST enabled environment variable DD_IAST_ENABLED=true
            docker run -d -p ${{ env.JUICE_SHOP_PORT }}:3000 --name juice-shop -e DD_IAST_ENABLED=true bkimminich/juice-shop
          EOF

  sast_semgrep:
    name: Run Semgrep SAST
    runs-on: ubuntu-latest
    needs: build_and_deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep scan
        run: semgrep --config=p/ci --json --output=semgrep-results.json

      - name: Upload Semgrep results
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-results
          path: semgrep-results.json

  dast_owasp_zap:
    name: Run OWASP ZAP DAST
    runs-on: ubuntu-latest
    needs: build_and_deploy
    steps:
      - name: Run OWASP ZAP full scan
        uses: zaproxy/action-full-scan@v0.5.0
        with:
          target: http://${{ env.SSH_HOST }}:${{ env.JUICE_SHOP_PORT }}

      - name: Upload ZAP report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap_report.html

  iast_datadog_monitoring:
    name: Monitor Datadog Runtime Security Findings
    runs-on: ubuntu-latest
    needs: build_and_deploy
    steps:
      - name: Reminder to monitor Datadog IAST findings
        run: |
          echo "Datadog Runtime Code Analysis is enabled in the Juice Shop container."
          echo "Review vulnerability detections and runtime findings in the Datadog Security Platform dashboard."

  summarize_results:
    name: Summary and Reporting
    runs-on: ubuntu-latest
    needs:
      - sast_semgrep
      - dast_owasp_zap
      - iast_datadog_monitoring
    steps:
      - name: Download Semgrep results
        uses: actions/download-artifact@v3
        with:
          name: semgrep-results

      - name: Download ZAP report
        uses: actions/download-artifact@v3
        with:
          name: zap-report

      - name: Output summary
        run: |
          echo "SAST and DAST reports downloaded."
          echo "Check Datadog Console for Runtime Code Analysis IAST results."
