name: Zen RASP Benchmark

on:
    workflow_dispatch:

env:
    EC2_INSTANCE_IP: ${{ secrets.EC2_INSTANCE_IP }}
    EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
    ZEN_RASP_PORT: 4000

jobs:
    deploy-zen-rasp:
        name: Deploy Juice Shop with Zen Firewall (RASP)
        runs-on: ubuntu-latest

        steps:
            - name: Setup SSH Key
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
                  ssh-keyscan -H ${{ env.EC2_INSTANCE_IP }} >> ~/.ssh/known_hosts

            - name: Deploy Zen RASP Container
              run: |
                  ssh -i ~/.ssh/id_rsa ubuntu@${{ env.EC2_INSTANCE_IP }} 'bash -s' <<'ENDSSH'
                  set -e
                  echo "ðŸ”¹ Checking for existing Juice Shop Zen container..."
                  docker stop juice-shop-zen 2>/dev/null || true
                  docker rm juice-shop-zen 2>/dev/null || true

                  echo "ðŸ”¹ Pulling latest Juice Shop image..."
                  docker pull bkimminich/juice-shop:latest

                  DD_AGENT_HOST=$(hostname -I | awk "{print \$1}")
                  echo "ðŸ”¹ Running Juice Shop with Zen Firewall (RASP) on port 4000..."
                  docker run -d \
                    --name juice-shop-zen \
                    -p 4000:3000 \
                    -e DD_AGENT_HOST=${DD_AGENT_HOST} \
                    -e DD_TRACE_AGENT_PORT=8126 \
                    -e DD_SERVICE=juice-shop-zen \
                    -e DD_ENV=benchmark \
                    -e DD_VERSION=latest \
                    bkimminich/juice-shop:latest \
                    sh -c "npm install @aikido/zen-firewall --no-save && node -r @aikido/zen-firewall ./app.js"

                  echo "âœ… Juice Shop (Zen RASP) is running on http://$(hostname -I | awk '{print $1}'):4000"

                  echo "ðŸ”¹ Waiting for Juice Shop Zen to be ready..."
                  for i in {1..30}; do
                    if curl -s http://localhost:3000 >/dev/null 2>&1; then
                      echo "Juice Shop Zen is up!"
                      break
                    fi
                    sleep 3
                  done
                  ENDSSH

            - name: Verify Zen RASP is reachable
              run: |
                  sleep 10
                  echo "Checking if Juice Shop with Zen Firewall is reachable..."
                  for i in {1..5}; do
                    if curl -f -m 10 http://${{ env.EC2_INSTANCE_IP }}:${{ env.ZEN_RASP_PORT }} >/dev/null 2>&1; then
                      echo "SUCCESS: Juice Shop Zen accessible at http://${{ env.EC2_INSTANCE_IP }}:${{ env.ZEN_RASP_PORT }}"
                      exit 0
                    fi
                    echo "Attempt $i/5..."
                    sleep 3
                  done
                  echo "ERROR: Cannot reach Juice Shop Zen"
                  exit 1
